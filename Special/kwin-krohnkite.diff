Reset layout, tiling and other stuff when:

  . I switch from an empty workspace

  . I switch to an empty workspace


To make this work:

  . For each layout, add a Reset method

  . Set the layoutOrder[0] element as layout

  . Consider adding those reset scripts to arrange()


One should probably write their own tiling KWin script...
Learn JS: https://developer.mozilla.org/en-US/docs/Learn/JavaScript



diff --git a/KDE/share/kwin/scripts/krohnkite/contents/code/script.js b/KDE/share/kwin/scripts/krohnkite/contents/code/script.js
index 16f62d0..e34fd66 100644
--- a/KDE/share/kwin/scripts/krohnkite/contents/code/script.js
+++ b/KDE/share/kwin/scripts/krohnkite/contents/code/script.js
@@ -56,6 +56,7 @@ var KWinConfig = (function () {
         this.layoutOrder = [];
         this.layoutFactories = {};
         [
+            ["enableFloatingLayout", false, FloatingLayout],
             ["enableTileLayout", true, TileLayout],
             ["enableMonocleLayout", true, MonocleLayout],
             ["enableThreeColumnLayout", true, ThreeColumnLayout],
@@ -63,7 +64,6 @@ var KWinConfig = (function () {
             ["enableStairLayout", true, StairLayout],
             ["enableSpiralLayout", true, SpiralLayout],
             ["enableQuarterLayout", false, QuarterLayout],
-            ["enableFloatingLayout", false, FloatingLayout],
             ["enableCascadeLayout", false, CascadeLayout],
         ]
             .forEach(function (_a) {
@@ -1099,6 +1099,8 @@ var TilingEngine = (function () {
             if (window.state === WindowState.Undecided)
                 window.state = (window.shouldFloat) ? WindowState.Floating : WindowState.Tiled;
         });
+        if (visibles.length === 0 && layout.classID !== CONFIG.layoutOrder[0])
+            layout = this.setLayout(ctx, CONFIG.layoutOrder[0]);
         var tileables = this.windows.getVisibleTileables(srf);
         if (CONFIG.maximizeSoleTile && tileables.length === 1) {
             tileables[0].state = WindowState.Maximized;
