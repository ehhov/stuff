# vim:ft=sh
# ~/.mkshrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

HISTFILE=~/.mkshhst

bind '^L=clear-screen'
bind -m ^U='^[0^K'
bind '^[[M~=delete-word-forward' # used by st. Doesn't work anyway.
bind -m ^Q='^A^[[1;5C^[[C'
#bind '^[[3;5~=delete-word-forward' # used by xterm, but too long for mksh

[ -r ~/.shellsrc ] && . ~/.shellsrc

PS1func() {
	local title time user path branch
	time="36| $(PStime)"
	user="35| $USER"
	path="32| $(sed -E 's/([^\./]{1})[^/]*\//\1\//g' <<< ${PWD/#$HOME/\~})"
	branch="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)"
	if [ "$branch" ]; then branch=" ($branch)"; fi; branch="37|$branch"
	# hyphen -, en dash –, em dash —
	title="${PWD/#$HOME/\~} : ${0##*/}" # $0 is the actual shell
	if [ "$SHDEPTH" -gt 1 ]; then
		title="$title ($SHDEPTH)"
	fi
	title="$title — ${TERM%-*color}"

	echo -en "\\001\\015"
	echo -en "\\001\\033]0;"; echo -n "$title"; echo -en "\\007\\001"
	for item in "$time" "$user" "$path" "$branch"; do
		echo -en "\\001\\033[${item%%\|*}m\\001"
		echo -n "${item#*\|}"
	done
	printf "\\001\\033[00m\\001 "
}

PROMPT_COMMAND=""
PS1="\$(PS1func)"
